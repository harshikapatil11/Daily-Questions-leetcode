# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution(object):
    def buildTree(self, preorder, inorder):
        """
        :type preorder: List[int]
        :type inorder: List[int]
        :rtype: Optional[TreeNode]
        """
        if not preorder or not inorder:  # Fixed indentation here
            return None

        root = TreeNode(preorder[0])
        stack = [root]
        inorder_index = 0

        for i in range(1, len(preorder)):
            node = TreeNode(preorder[i])
            prev = None

            while stack and stack[-1].val == inorder[inorder_index]:
                prev = stack.pop()
                inorder_index += 1

            if prev:
                prev.right = node
            else:
                stack[-1].left = node

            stack.append(node)

        return root
